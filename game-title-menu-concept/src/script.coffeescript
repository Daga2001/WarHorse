atmosphere = new Howl
  urls: ['https://dl.dropboxusercontent.com/u/85846089/561360_Chronos-Part-4.mp3']
  loop: true
  autoplay: true

$ ->
  
  do ->
    lastTime = 0
    vendors = ['ms', 'moz', 'webkit', 'o']

    for vendor in vendors
      unless window.requestAnimationFrame
        reqAnim = window["#{vendor}RequestAnimationFrame"]
        cancelReq = window["#{vendor}CancelAnimationFrame"]
        cancelReqAnim = window["#{vendor}CancelRequestAnimationFrame"]
        window.requestAnimationFrame = reqAnim
        window.cancelAnimationFrame = cancelReq or cancelReqAnim

    unless window.requestAnimationFrame
      window.requestAnimationFrame = (callback, element) ->
        currentTime = new Date().getTime()
        timeToCall = Math.max 0, 16 - (currentTime - lastTime)
        timeout = (ms, fn) -> window.setTimeout fn, ms
        id = timeout timeToCall, -> callback currentTime + timeToCall
        lastTime = currentTime + timeToCall
        return id

    unless window.cancelAnimationFrame
      window.cancelAnimationFrame = (id) ->
        clearTimeout id

  canvasbg = ->
    canvas = document.getElementById 'canvas-bg'
    ctx = canvas.getContext '2d'
    animationID = 0

    W = window.innerWidth
    H = window.innerHeight
    canvas.width = W
    canvas.height = H

    class Particle
      constructor: ->
        @location = x: Math.random() * W, y: Math.random() * H
        @radius = 0
        @speed = 3
        @angle = Math.random() * 360
        @rgba = "rgba(255,255,255,0.1)"

    particles = []

    particles.push new Particle() for i in [1..25]

    draw = ->
      ctx.globalCompositeOperation = 'source-over'
      ctx.fillStyle = 'rgba(0, 0, 0, 0.1)'
      ctx.fillRect 0, 0, W, H
      ctx.globalCompositeOperation = 'source-under'
      for p in particles
        ctx.fillStyle = 'cyan'
        ctx.fillRect p.location.x, p.location.y, p.radius, p.radius
        for p2 in particles
          yd = p2.location.y - p.location.y
          xd = p2.location.x - p.location.x
          distance = Math.sqrt xd*xd + yd*yd
          if distance < 200
            ctx.beginPath()
            ctx.lineWidth = 1
            ctx.moveTo p.location.x, p.location.y
            ctx.lineTo p2.location.x, p2.location.y
            ctx.strokeStyle = p.rgba
            ctx.stroke()
        p.location.x = p.location.x + p.speed * Math.cos p.angle * Math.PI / 180
        p.location.y = p.location.y + p.speed * Math.sin p.angle * Math.PI / 180
        p.location.x = W if p.location.x < 0
        p.location.x = 0 if p.location.x > W
        p.location.y = H if p.location.y < 0
        p.location.y = 0 if p.location.y > H

    animate = ->
      animationID = window.requestAnimationFrame animate
      draw()
      return animationID

    animate()
  
  canvasbg()
  laser = new Howl urls: ['http://soundjax.com/reddo/87402%5ELASER.mp3']
  bullet = new Howl urls: ['http://soundjax.com/reddo/21513%5EGUNSHOT.mp3']
  
  $('.navcard-item').find('a').on 'mouseenter', (e) ->
    laser.play()
    
  $('.navcard-item').find('a').on 'click', (e) ->
    bullet.play()
  
  $click = $('.clicker')
  $("html").on "mousedown", (e) ->
    $click.addClass("active").css("left", (e.pageX)).css "top", (e.pageY)

  $click.bind "transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd", ->
    $click.removeClass "active"
    
  $('.contain').mousemove (e) ->
    x = ( e.pageX - $(@).offset().left - ($(@).outerWidth(true) / 2) ) * -1 / 100
    y = ( e.pageY - $(@).offset().top - ($(@).outerHeight(true) / 2) ) * -1 / 100
    matrix = [
      [1, 0, 0, -x*1e-4]
      [0, 1, 0, -y*1e-4]
      [0, 0, 1, 1]
      [0, 0, 0, 1]
    ]
    $(".navcard").css transform: "matrix3d(#{matrix.toString()})"